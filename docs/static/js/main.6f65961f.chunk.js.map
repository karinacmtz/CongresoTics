{"version":3,"sources":["context/AuthContext.js","types/AuthTypes.js","reducers/AuthReducer.js","img/utl-logo.png","img/Tics.png","pages/LoginScreen.jsx","components/Navbar.jsx","reducers/RegistrosReducer.js","pages/RegistroScreen.jsx","components/Card.jsx","pages/ParticipantesScreen.jsx","pages/EditarScreen.jsx","routers/AppRouter.jsx","routers/PublicRouter.jsx","routers/PrivateRouter.jsx","routers/LoginRouter.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","AuthTypes","AuthReducer","state","action","type","log","LoginScreen","dispatch","useContext","history","useHistory","className","style","width","align","vertical-align","src","img1","class","alt","onClick","replace","img2","Navbar","img4","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","activeClassName","aria-current","to","img3","RegistrosReducer","payload","filter","actual","init","participantes","localStorage","getItem","JSON","parse","RegistroScreen","useReducer","useState","nombre","apellido","correo","twitter","profesion","data","setData","handleChange","e","preventDefault","target","name","value","useEffect","setItem","stringify","actionAdd","uuidv4","for","onChange","required","alert","Card","participante","href","ParticipantesScreen","push","map","EditarScreen","AppRouter","exact","path","component","PublicRouter","auth","Component","rest","props","PrivateRouter","LoginRouter","App","Provider","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.6f65961f.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext();","export const AuthTypes = {\r\n    login: \"login\",\r\n    logout: \"logout\",\r\n}","import { AuthTypes } from \"../types/AuthTypes\";\r\n\r\nexport const AuthReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case AuthTypes.login:\r\n            return {log: true};\r\n\r\n        case AuthTypes.logout:\r\n            return {log: false};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/utl-logo.e11bc787.png\";","export default __webpack_public_path__ + \"static/media/Tics.50d678a6.png\";","import React, {useContext} from 'react';\r\nimport img1 from '../img/utl-logo.png';\r\nimport img2 from '../img/Tics.png';\r\nimport { useHistory } from 'react-router';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { AuthTypes } from '../types/AuthTypes';\r\n//import Estilos from '../estilos/Estilos.css';\r\n\r\nconst LoginScreen = () => {\r\n\r\n    const {dispatch} = useContext(AuthContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const handleLogin = () => {\r\n        //Establecer log-true\r\n        dispatch({type: AuthTypes.login});\r\n\r\n        //Enrutar a la lista de participantes\r\n        history.replace(\"/participantes\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-6 ms-auto text-center\" style={{width: 600}}>\r\n            <div align=\"center\" vertical-align=\"middle\"><img src={img1} class=\"img-thumbnail\" alt=\"logo\"/></div>\r\n                <h1 className=\"my-3\">Congreso de Tecnologías de la Información</h1>\r\n                <button className=\"btn btn-primary\" onClick={handleLogin}>Entrar</button>\r\n            </div>\r\n        <div  className=\"col-6  ms-auto\" style={{width: 700}}>\r\n        <div align=\"center\" vertical-align=\"middle\"><img src={img2} class=\"img-thumbnail\" alt=\"logo\"/></div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, {useContext} from 'react';\r\nimport {NavLink, useHistory} from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { AuthTypes } from '../types/AuthTypes';\r\nimport img3 from '../img/utl-logo.png';\r\nimport img4 from '../img/Tics.png';\r\n\r\nconst Navbar = () => {\r\n\r\n    //Recuperamos el context y el dispatch pra poderlo modificar\r\n    const {dispatch} = useContext(AuthContext);\r\n\r\n    //Definimos el history usando el hooj useHistory\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () => {\r\n        //console.log(history);\r\n\r\n        //Usamos el dispatchpara modificar el context y establecer log-false\r\n        dispatch({type: AuthTypes.logout});\r\n\r\n        //Usando el método replace del history para remplazar una ruta por otra\r\n        history.replace(\"/login\");\r\n    };\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-warning\">\r\n            <div className=\"container-fluid\">\r\n                <h2 className=\"navbar-brand\"><img src={img4} class=\"img-thumbnail\" alt=\"logo\" width=\"60px\"/></h2>\r\n                \r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                            <NavLink activeClassName=\"active text-white\" onClick={handleLogout} className=\"nav-link\" aria-current=\"page\" to=\"/login\">Inicio</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink activeClassName=\"active text-white\"  className=\"nav-link\" aria-current=\"page\" to=\"/participantes\">Participantes</NavLink>\r\n                        </li>\r\n                        \r\n                        <li className=\"nav-item\">\r\n                            <NavLink activeClassName=\"active text-white\" className=\"nav-link\" aria-current=\"page\" to=\"/registro\">Registro</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"d-flex\">\r\n                    <img src={img3} class=\"img-thumbnail\" alt=\"logo\" width=\"50px\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","export const RegistrosReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case \"add\":\r\n            return [...state, action.payload]\r\n            \r\n            //Hacemos una copia del state y agregamos un action.payload (payload contiene la información con los nuevos datos)\r\n\r\n            case \"edit\":\r\n                return state.filter((actual) => actual.id !== action.payload);\r\n            \r\n            case \"delete\":\r\n                return state.filter((actual) => actual.id !== action.payload);//Filtra todos los datos menos donde coincida el id\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}; ","//import React from 'react'\r\nimport React, {useState,useReducer, useEffect} from 'react';\r\nimport {RegistrosReducer} from '../reducers/RegistrosReducer';\r\n// import { useHistory } from 'react-router';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst init = () =>{\r\n    const participantes = localStorage.getItem(\"participantes\")\r\n    return participantes ? JSON.parse(participantes) : []\r\n}\r\n \r\nconst RegistroScreen = () => {\r\n\r\n    const [state, dispatch] = useReducer(RegistrosReducer, [], init)\r\n\r\n\r\n    //Agregamos un state para los datos\r\n    const [data, setData] = useState({nombre: \"\", apellido:\"\", correo:\"\", twitter:\"\", profesion:\"\"});\r\n\r\n    //Desestructuramos el state\r\n    const {nombre, apellido, correo, twitter, profesion} = data;\r\n\r\n    const handleChange = (e) => {\r\n\r\n        e.preventDefault();\r\n        //Modificamos el estado\r\n        setData({\r\n            ...data,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem(\"participantes\", JSON.stringify(state))\r\n    }, [state])\r\n\r\n    //Definimos la acción para Add\r\n    const actionAdd = {\r\n        type: \"add\",\r\n        payload:{\r\n            id: uuidv4(),\r\n            nombre,\r\n            apellido,\r\n            correo,\r\n            twitter,\r\n            profesion,\r\n            \r\n        },\r\n    };\r\n\r\n    // const history = useHistory()\r\n\r\n    const handleAdd = () => {\r\n        const {payload} = actionAdd;\r\n        const {nombre, apellido, correo, twitter, profesion} = payload;\r\n\r\n        if(actionAdd.payload.nombre !== \"\" && actionAdd.payload.apellido !== \"\" && actionAdd.payload.correo !== \"\" && actionAdd.payload.twitter !== \"\" && actionAdd.payload.profesion !== \"\" ){\r\n            dispatch(actionAdd);\r\n            \r\n            \r\n        }else{\r\n            alert(\"completa los datos\");\r\n        } \r\n\r\n        <Link to=\"/participantes\">\r\n        </Link>\r\n\r\n        // history.push(\"/participantes\"); \r\n        \r\n    };\r\n\r\n    \r\n    return (\r\n        <form>\r\n             <div className=\"container\">\r\n                <h3>Registro de Participante</h3>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <form>\r\n                            <div class=\"form-group\">\r\n                                <label className=\"mx-1 d-grid gap-2\" for=\"validation01\"> \r\n                                Nombre:{\" \"}\r\n                                    <input \r\n                                    onChange={handleChange}\r\n                                    name=\"nombre\"\r\n                                    value={nombre} \r\n                                    type=\"text\" \r\n                                    class=\"form-control \" \r\n                                    required/>\r\n                                </label>\r\n                                <br></br>\r\n                                <label className=\"mx-1 d-grid gap-2\" for=\"validation01\"> \r\n                                Apellidos:{\" \"}\r\n                                    <input \r\n                                    onChange={handleChange}\r\n                                    name=\"apellido\"\r\n                                    value={apellido} \r\n                                    type=\"text\" \r\n                                    class=\"form-control \" \r\n                                    required/>\r\n                                </label>\r\n                                <br></br>\r\n                                <label className=\"mx-1 d-grid gap-2\" for=\"validation01\"> \r\n                                Correo:{\" \"}\r\n                                    <input \r\n                                    onChange={handleChange}\r\n                                    name=\"correo\"\r\n                                    value={correo} \r\n                                    type=\"text\" \r\n                                    class=\"form-control\" \r\n                                    required/>\r\n                                </label>\r\n                                <br></br>\r\n                                <label className=\"mx-1 d-grid gap-2\" for=\"validation01\"> \r\n                                Twitter:{\" \"}\r\n                                    <input \r\n                                    onChange={handleChange}\r\n                                    name=\"twitter\"\r\n                                    value={twitter} \r\n                                    type=\"text\" \r\n                                    class=\"form-control \" \r\n                                    required/>\r\n                                </label>\r\n                                <br></br>\r\n                                <label className=\"mx-1 d-grid gap-2\" for=\"validation01\"> \r\n                                Profesión:{\" \"}\r\n                                    <input \r\n                                    onChange={handleChange}\r\n                                    name=\"profesion\"\r\n                                    value={profesion} \r\n                                    type=\"text\" \r\n                                    class=\"form-control \" \r\n                                    required/>\r\n                                </label>\r\n                                <br></br>\r\n\r\n                                <label><input type=\"checkbox\" id=\"cbox1\" value=\"first_checkbox\" /> Leí y acepto los términos y condiciones</label><br></br>\r\n                                \r\n                            </div>\r\n                            \r\n                            <label className=\"mx-1 d-grid gap-2\">\r\n                                <button onClick={handleAdd} className=\"btn btn-info mt-2\">Guardar</button>\r\n                            </label>\r\n                            \r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RegistroScreen\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Card = ({participante}) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card m-3 col-5\" style={{width: 500}} >\r\n        <div  className=\"row no-gutters \">\r\n\r\n            {/* Redirigir a la pagina de editar colocando su id */}\r\n            <Link  to={\"editar/\"+participante.id}>\r\n                \r\n                <div className=\" col-sm-5\">\r\n                <img className=\"card-img\" alt=\"\" src=\"assets/avatar.png\" />\r\n                </div>\r\n            </Link>\r\n            <div className=\"col-sm-7\">\r\n                <div className=\"card-body \">\r\n                    {/* llamar datos */}\r\n                    <p className=\"card-text\">\r\n                    <h4 className=\"card-title\">{participante.nombre} {participante.apellido}</h4>\r\n                    {/* <i class=\"fa fa-twitter\" style=\"font-size:48px;color:red\"></i> */}\r\n                    <a href={`https://twitter.com/${participante.twitter}`}  target=\"fa fa-twitterk\" >@{participante.twitter}</a>\r\n                    <h4 className=\"card-title\">{participante.profesion}</h4>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useReducer } from 'react'\r\nimport Card from '../components/Card';\r\nimport { useHistory } from 'react-router';\r\nimport { RegistrosReducer } from '../reducers/RegistrosReducer';\r\n\r\nconst init = () => {\r\n    const participantes = localStorage.getItem(\"participantes\")\r\n    return participantes ? JSON.parse(participantes): []\r\n}\r\n\r\nconst ParticipantesScreen = () => {\r\n\r\n    const [state, dispatch] = useReducer(RegistrosReducer, [], init)\r\n\r\n    const history = useHistory()\r\n\r\n    const handleRegister = () => {\r\n        //usamos el dispatch para modificar el context y establecer log=true\r\n        \r\n        history.push(\"/registro\");\r\n    }\r\n    return (\r\n        <div className=\"container mt-5\"> \r\n        <div className=\"row\">\r\n            <div className=\"col-10\">\r\n                <h1>Participantes</h1>\r\n            </div>\r\n            <div className=\"col-2\">\r\n                <button onClick={handleRegister} className=\"btn btn-success\">Agregar</button>\r\n            </div>\r\n        </div>\r\n        \r\n        <hr />\r\n        <div className=\"row\">\r\n            {\r\n                state.map((participante) => (\r\n                    <Card key={participante.id} participante ={participante} />\r\n                ))\r\n            }\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ParticipantesScreen\r\n\r\n","//import React from 'react'\r\nimport React, {useState} from 'react';\r\n\r\nconst EditarScreen = () => {\r\n\r\n    //Agregamos un state para los datos\r\n    const [data, setData] = useState({nombre: \"\", apellido:\"\", correo:\"\", twitter:\"\", profesion:\"\"});\r\n\r\n    //Desestructuramos el state\r\n    const {nombre, apellido, correo, twitter, profesion} = data;\r\n\r\n    const handleChange = (e) => {\r\n\r\n        e.preventDefault();\r\n        //Modificamos el estado\r\n        setData({\r\n            ...data,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n             <div className=\"container\">\r\n                <h3>Editar Participante</h3>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <form>\r\n                            <div class=\"form-group\">\r\n                                <label className=\"mx-1 d-grid gap-2\" for=\"validation01\"> \r\n                                Nombre:{\" \"}\r\n                                    <input \r\n                                    onChange={handleChange}\r\n                                    name=\"nombre\"\r\n                                    value={nombre} \r\n                                    // value={this.state.nombre} \r\n                                    type=\"text\" \r\n                                    class=\"form-control \" \r\n                                    required/>\r\n                                </label>\r\n                                <br></br>\r\n                                <label className=\"mx-1 d-grid gap-2\" for=\"validation01\"> \r\n                                Apellidos:{\" \"}\r\n                                    <input \r\n                                    onChange={handleChange}\r\n                                    name=\"apellido\"\r\n                                    value={apellido} \r\n                                    type=\"text\" \r\n                                    class=\"form-control \" \r\n                                    required/>\r\n                                </label>\r\n                                <br></br>\r\n                                <label className=\"mx-1 d-grid gap-2\" for=\"validation01\"> \r\n                                Correo:{\" \"}\r\n                                    <input \r\n                                    onChange={handleChange}\r\n                                    name=\"correo\"\r\n                                    value={correo} \r\n                                    type=\"text\" \r\n                                    class=\"form-control\" \r\n                                    required/>\r\n                                </label>\r\n                                <br></br>\r\n                                <label className=\"mx-1 d-grid gap-2\" for=\"validation01\"> \r\n                                Twitter:{\" \"}\r\n                                    <input \r\n                                    onChange={handleChange}\r\n                                    name=\"twitter\"\r\n                                    value={twitter} \r\n                                    type=\"text\" \r\n                                    class=\"form-control \" \r\n                                    required/>\r\n                                </label>\r\n                                <br></br>\r\n                                <label className=\"mx-1 d-grid gap-2\" for=\"validation01\"> \r\n                                Profesión:{\" \"}\r\n                                    <input \r\n                                    onChange={handleChange}\r\n                                    name=\"profesion\"\r\n                                    value={profesion} \r\n                                    type=\"text\" \r\n                                    class=\"form-control \" \r\n                                    required/>\r\n                                </label>\r\n                                <br></br>\r\n\r\n                                <label><input type=\"checkbox\" id=\"cbox1\" value=\"first_checkbox\" /> Leí y acepto los términos y condiciones</label><br></br>\r\n                                \r\n                            </div>\r\n                            <label className=\"mx-1 d-grid gap-2\">\r\n                                <button  className=\"btn btn-info mt-2\">Guardar</button>\r\n                            </label>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditarScreen\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect} from 'react-router-dom';\r\nimport Navbar from '../components/Navbar';\r\nimport RegistroScreen from '../pages/RegistroScreen';\r\nimport ParticipantesScreen from '../pages/ParticipantesScreen';\r\nimport EditarScreen from '../pages/EditarScreen';\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n        <>\r\n          <Navbar />\r\n          <Switch>\r\n              <Route exact path=\"/participantes\"  component={ParticipantesScreen} />\r\n              <Route exact path=\"/registro\" component={RegistroScreen} />\r\n              {/* <Route exact path=\"/editar\" component={EditarScreen} /> */}\r\n              <Route exact path=\"/editar/:id\" component={EditarScreen} />\r\n\r\n              <Redirect to=\"/\" />\r\n          </Switch>  \r\n        </>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nconst PublicRouter = ({auth, component: Component, ...rest}) => {\r\n    return <Route \r\n    {...rest} \r\n    //Protegemos la ruta verificando el valor de auth\r\n    component={(props) => !auth.log ?  <Component {...props} /> : <Redirect to=\"/\" />}  />\r\n};\r\n\r\nexport default PublicRouter;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\n//Component: Representa el componente que vamos a renderizar\r\nconst PrivateRouter = ({auth, component: Component, ...rest}) => {\r\n\r\n    return <Route \r\n    {...rest} \r\n    component={(props) => auth.log ? <Component {...props} /> : <Redirect to=\"/login\" />} />\r\n};\r\n\r\nexport default PrivateRouter;\r\n","import React, {useContext} from 'react';\r\nimport {BrowserRouter as Router, Switch} from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport LoginScreen from '../pages/LoginScreen';\r\nimport AppRouter from './AppRouter'\r\nimport PublicRouter from './PublicRouter';\r\nimport PrivateRouter from './PrivateRouter';\r\n\r\nconst LoginRouter = () => {\r\n\r\n    //Recuperamos el context mediante el hook useContext para si poder saber si el usuario esta autentificado o no\r\n    const {log} = useContext(AuthContext);\r\n\r\n    return (\r\n        <Router>\r\n            {/* <AppRouter /> */}\r\n            <Switch>\r\n                {/* <Route exact path=\"/login\" component={LoginScreen} /> */}\r\n                <PublicRouter path=\"/login\" auth={log} component={LoginScreen} />\r\n                <PrivateRouter path=\"/\" auth={log} component={AppRouter} />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default LoginRouter;","import React, {useReducer, useEffect} from 'react';\nimport { AuthContext } from './context/AuthContext';\nimport { AuthReducer } from './reducers/AuthReducer';\nimport LoginRouter from './routers/LoginRouter';\n\n//Definir la función init, para intentar recuperar el estado log desde el localstorage\nconst init = () => {\n  return JSON.parse(localStorage.getItem('log')) || {log: false}\n};\n\nconst App = () => {\n\n  //Definir el contetx para toda aplicacion mediante el hook useContext\n  const [log, dispatch] = useReducer(AuthReducer, {}, init);\n\n  //Definimos un useEffect para persistor el estado del log\n  useEffect(() => {\n    localStorage.setItem('log', JSON.stringify(log));\n  }, [log])\n\n  //Usamos <AuthContext.Provider> para proveer el contexto a toda la aplicación\n  return(\n    <AuthContext.Provider value={{log, dispatch}}>\n      <LoginRouter />\n    </AuthContext.Provider>\n  )\n\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}